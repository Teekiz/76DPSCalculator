services:
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--protected-mode", "no" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dpsnet

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_started
    volumes:
      - ./src/main/resources/:/app/config/
    networks:
      - dpsnet

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: 76DPSCalculatorDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: testpw
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dpsnet

networks:
  dpsnet:
    driver: bridge

volumes:
  redis_data:
  postgres-data: