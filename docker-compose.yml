services:
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--protected-mode", "no" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dpsnet

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-boot-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
      mongo:
        condition: service_started
    volumes:
      - ./src/main/resources/:/app/config/
    networks:
      - dpsnet

  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: 76dpscalculatordb
    ports:
      - "27017:27017"
    volumes:
      - ./github/mongo_database/76dpscalculatordb:/dump
      - mongo-data:/data/db
      - ./github/mongo_database/restore.sh:/docker-entrypoint-initdb.d/restore.sh
    networks:
      - dpsnet

networks:
  dpsnet:
    driver: bridge

volumes:
  redis_data:
  mongo-data: